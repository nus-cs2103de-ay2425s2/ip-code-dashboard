[{"path":"src/main/java/action/ActionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package action;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andychong23"},"content":"import data.DataHandler;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import task.DeadLineTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import task.EventTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import task.ToDoTask;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import user.User;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Random;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.random.RandomGenerator;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Class to handle actions","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ActionHandler {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private RandomGenerator randomGenerator \u003d new Random();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns List of Strings that will be output to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * This method processes the actions that the user inputs accordingly","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Precondition: actionString is a valid input by the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param actionString Valid Input String provided by the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param user        User class that indicates the current user","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return List of Strings that indicates what needs to be output to the console","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e processAction(String actionString, User user) throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e outputMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cString\u003e actionStringTokens \u003d Arrays.asList(actionString.split(\" \"));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (actionStringTokens.getFirst().equalsIgnoreCase(Action.LIST.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            processListAction(user, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.MARK.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            processMarkAction(user, actionStringTokens, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.UNMARK.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            processUnmarkAction(user, actionStringTokens, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.TODO.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            processToDoAction(user, actionStringTokens, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.DEADLINE.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            processDeadlineAction(user, actionStringTokens, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.EVENT.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            processEventAction(user, actionStringTokens, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.DELETE.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"             processDeleteAction(user, actionStringTokens, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.FIND.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            processFindAction(user, actionStringTokens, outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } else if (actionStringTokens.getFirst().equalsIgnoreCase(Action.CHEER.toString())) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            processCheerAction(outputMessages);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        updateSaveFile(user, false);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return outputMessages;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Adds a cheer message to outputMessages","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws IOException File read fails for the cheer messages","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private void processCheerAction(List\u003cString\u003e outputMessages) throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        outputMessages.add(getCheerMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Find the tasks that has the relevant keyword","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If tasks are found, add a numbered task list to outputMessages","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Note: Numbered task list provided here does not correspond to the actual task number","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param user User that is requesting the find action","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param actionStringTokens List of inputs provided by the user, split by *space*","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void processFindAction(User user, List\u003cString\u003e actionStringTokens, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e foundTasks \u003d user.findTaskWithKeyWord(","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                String.join(\" \", actionStringTokens.subList(1, actionStringTokens.size())));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            outputMessages.add(\"There are not tasks with that keyword in your list D:\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        else {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            outputMessages.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            outputMessages.add(user.getTaskList(foundTasks));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Delete the task number specified by the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param actionStringTokens List of inputs provided by the user, split by *space*","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void processDeleteAction(User user, List\u003cString\u003e actionStringTokens, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        outputMessages.add(user.deleteTask(parseInt(actionStringTokens.get(1)) - 1));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Now you have %s tasks in your list\".formatted(user.getNumberOfTasks()));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Adds an event task to the task list associated with the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param actionStringTokens List of inputs provided by the user, split by *space*","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void processEventAction(User user, List\u003cString\u003e actionStringTokens, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Got it. I\u0027ve added this event:\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Task createdTask \u003d createTask(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Action.EVENT,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                actionStringTokens.subList(1, actionStringTokens.size())","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        user.addTask(createdTask);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        outputMessages.add(createdTask.getTaskInformation());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Now you have %s tasks in your list\".formatted(user.getNumberOfTasks()));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Adds a deadline task to the task list associated with the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @param actionStringTokens List of inputs provided by the user, split by *space*","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void processDeadlineAction(User user, List\u003cString\u003e actionStringTokens, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Got it. I\u0027ve added this deadline:\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Task createdTask \u003d createTask(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Action.DEADLINE,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                actionStringTokens.subList(1, actionStringTokens.size())","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        user.addTask(createdTask);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        outputMessages.add(createdTask.getTaskInformation());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Now you have %s tasks in your list\".formatted(user.getNumberOfTasks()));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Adds a todo task to the task list associated with the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param actionStringTokens List of inputs provided by the user, split by *space*","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void processToDoAction(User user, List\u003cString\u003e actionStringTokens, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Got it. I\u0027ve added this todo task:\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Task createdTask \u003d createTask(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                Action.TODO,","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                actionStringTokens.subList(1, actionStringTokens.size())","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        user.addTask(createdTask);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        outputMessages.add(createdTask.getTaskInformation());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Now you have %s tasks in your list\".formatted(user.getNumberOfTasks()));","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Unmarks a task status","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param actionStringTokens List of inputs provided by the user, split by *space*","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void processUnmarkAction(User user, List\u003cString\u003e actionStringTokens, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        outputMessages.add(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        outputMessages.add(user.markTaskAsNotDone(parseInt(actionStringTokens.get(1)) - 1));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Marks a task status","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @param actionStringTokens List of inputs provided by the user, split by *space*","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void processMarkAction(User user, List\u003cString\u003e actionStringTokens, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        outputMessages.add(user.markTaskAsDone(parseInt(actionStringTokens.get(1)) - 1));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Add the user\u0027s task list to outputMessages","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @param outputMessages List of Strings that will be shown to the user","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private void processListAction(User user, List\u003cString\u003e outputMessages) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        outputMessages.add(\"Here are the tasks in your list: \");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        outputMessages.add(user.getTaskList());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Writes the user\u0027s current task list into memory","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @param user User","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @param isAppend boolean that indicates if we should append the data of rewrite the file","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @throws IOException When the file does not exist","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void updateSaveFile(User user, boolean isAppend) throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"andychong23"},"content":"        try {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            DataHandler.writeFile(user.getDataFilePath(), user.createSaveData(), isAppend);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"andychong23"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"andychong23"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Adds a cheer message to outputMessages","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @return String of cheer message","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws IOException when the file containing the cheer messages does not exist","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private String getCheerMessage() throws IOException{","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"        List\u003cString\u003e cheerMessages \u003d DataHandler.readFile(DataHandler.cheerPath);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return cheerMessages.get(randomGenerator.nextInt(cheerMessages.size()));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Method to create a TODO/DEADLINE/EVENT task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * @param action      Action enum field that indicates what is the action to do","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * @param taskDetails Valid input string provided by the user","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * @return Task that encapsulates the required information to create TODO/DEADLINE/EVENT task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"andychong23"},"content":"    public static Task createTask(Action action, List\u003cString\u003e taskDetails) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (action.equals(Action.TODO)) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new ToDoTask(String.join(\" \", taskDetails));","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"        } else if (action.equals(Action.DEADLINE)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"            int deadLineIndex \u003d taskDetails.indexOf(\"/by\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return new DeadLineTask(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    String.join(\" \", taskDetails.subList(0, deadLineIndex)),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    String.join(\" \", taskDetails.subList(deadLineIndex + 1, taskDetails.size()))","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } else if (action.equals(Action.EVENT)) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            int fromIndex \u003d taskDetails.indexOf(\"/from\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"            int toIndex \u003d taskDetails.indexOf(\"/to\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return new EventTask(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    String.join(\" \", taskDetails.subList(0, fromIndex)),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    String.join(\" \", taskDetails.subList(fromIndex + 1, toIndex)),","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    String.join(\" \", taskDetails.subList(toIndex + 1, taskDetails.size()))","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        return null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * Create Task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * @param taskDetail String representation for the details of the task","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * @return Task created","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Deprecated","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    private Task createTask(String taskDetail) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return new Task(taskDetail);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public enum Action {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"        LIST,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        MARK,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"        UNMARK,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        BYE,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"        TODO,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        DEADLINE,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"        EVENT,","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"andychong23"},"content":"        DELETE,","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"        FIND,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        CHEER,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"andychong23"},"content":"        DEFAULT","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"andychong23":9,"-":259}},{"path":"src/main/java/bob/Bob.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andychong23"},"content":"package bob;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import action.ActionHandler;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import io.InputValidator;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andychong23"},"content":"import io.UI;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import io.ValidationToken;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import user.User;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andychong23"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Chatbot class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andychong23"},"content":"public class Bob {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String CHATBOT_NAME \u003d \"Bob\";","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UI uI \u003d new UI(Bob.getCHATBOT_NAME());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private User user;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ActionHandler actionHandler \u003d new ActionHandler();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Bob() throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        user \u003d new User(\"bob\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Bob(String userName) throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        user \u003d new User(userName);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getCHATBOT_NAME() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return CHATBOT_NAME;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return String.join(\" \", uI.getWelcomeMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getExitMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return String.join(\" \", uI.getExitMessage());","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String parseInput(String input) throws IOException {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ValidationToken validationToken \u003d InputValidator.isInputValid(input, user);","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (validationToken.isValid()) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andychong23"},"content":"            return String.join(\"\\n\", actionHandler.processAction(input, user));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return validationToken.getErrorMessage();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"andychong23":17,"-":32}},{"path":"src/main/java/data/DataHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andychong23"},"content":"package data;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andychong23"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andychong23"},"content":"import java.nio.file.Files;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andychong23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andychong23"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andychong23"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Random;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.random.RandomGenerator;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * DataHandler class that handles Files I/O","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andychong23"},"content":"public class DataHandler {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andychong23"},"content":"    public static String saveDelimiter \u003d \"|\";","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andychong23"},"content":"    public static Path programRoot \u003d Paths.get(\"\").toAbsolutePath();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static DateTimeFormatter dateSaveFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static DateTimeFormatter dateTimeSaveFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Path cheerPath;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            cheerPath \u003d Paths.get(DataHandler.class.getResource(\"/cheer.txt\").toURI());","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } catch (URISyntaxException e) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Method to write data to a file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Precondition: File already exists in the system","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param filePath Path object of the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param payLoad  List of strings to write to the file, each item will be separated by \\n","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param isAppend Flag to append data instead of rewriting the file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IOException IO fails","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andychong23"},"content":"    public static void writeFile(Path filePath, List\u003cString\u003e payLoad, boolean isAppend) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andychong23"},"content":"        //file exists","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andychong23"},"content":"        if (isAppend) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andychong23"},"content":"            Files.writeString(filePath, String.join(\"\\n\", payLoad), StandardOpenOption.APPEND);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"andychong23"},"content":"            Files.writeString(filePath, String.join(\"\\n\", payLoad), StandardOpenOption.TRUNCATE_EXISTING);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Method to read data from a file","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Precondition: No precondition","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Guaranteed result:","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * 1. Data directory is created at the level of the program root","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * 2. userName.txt is created","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param filePath Path of the file to be read from","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return List of strings that contains the file contents","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IOException When either the directory or file is not created or when the file does not exists","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andychong23"},"content":"    public static List\u003cString\u003e readFile(Path filePath) throws IOException {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Files.exists(programRoot.resolve(\"data\"))) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Files.createDirectory(programRoot.resolve(\"data\"));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andychong23"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"andychong23"},"content":"        return Files.readAllLines(filePath);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"andychong23"},"content":"}","lastModifiedDate":"2025-02-03","isFullCredit":false}],"authorContributionMap":{"andychong23":26,"-":44}},{"path":"src/main/java/io/Input.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andychong23"},"content":"package io;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andychong23"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andychong23"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andychong23"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andychong23"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andychong23"},"content":" * Input class to handle the reading of all user inputs","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andychong23"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":"class Input {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andychong23"},"content":"    private final BufferedReader BUFFERED_READER \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andychong23"},"content":"     * Constructor","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andychong23"},"content":"    public Input() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Method to get cleaned user input with no trailing or leading whitespaces","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"andychong23"},"content":"     * @return Input string that user provides","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andychong23"},"content":"     * @throws IOException when IO fails","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public String getUserInput() throws IOException {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return this.cleanUserInput(this.BUFFERED_READER.readLine());","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andychong23"},"content":"     * Remove leading and trailing whitespaces","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andychong23"},"content":"     * @param userInput userInput String","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andychong23"},"content":"     * @return String with no trailing or leading whitespaces","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andychong23"},"content":"    private String cleanUserInput(String userInput) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andychong23"},"content":"        return userInput.strip();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andychong23"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"andychong23":33,"-":5}},{"path":"src/main/java/io/InputValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package io;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import action.ActionHandler;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import user.User;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.Year;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * InputValidator class that validates all user inputs","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class InputValidator {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter DAY_MONTH_YEAR_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final DateTimeFormatter DAY_MONTH_YEAR_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Check if user input is valid","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param userInput Input string provided by the user with no trailing or leading whitespaces","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return ValidationToken with isValid status and error message if it is not valid","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static ValidationToken isInputValid(String userInput, User user) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e userInputTokens \u003d Arrays.asList(userInput.split(\" \"));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.LIST.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andychong23"},"content":"            return isListInputValid(userInputTokens);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.BYE.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andychong23"},"content":"            return isByeInputValid(userInputTokens);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.MARK.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andychong23"},"content":"            return isMarkInputValid(userInputTokens, user);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.UNMARK.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andychong23"},"content":"            return isUnmarkInputValid(userInputTokens, user);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.TODO.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andychong23"},"content":"            return isToDoInputValid(userInputTokens);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.DEADLINE.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andychong23"},"content":"            return isDeadLineInputValid(userInputTokens);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.EVENT.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"andychong23"},"content":"            return isEventInputValid(userInputTokens);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.DELETE.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"andychong23"},"content":"            return isDeleteInputValid(userInputTokens, user);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.FIND.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"andychong23"},"content":"            return isFindInputValid(userInputTokens);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.getFirst().equalsIgnoreCase(ActionHandler.Action.CHEER.toString())) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andychong23"},"content":"            return isCheerInputValid(userInputTokens);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andychong23"},"content":"        return new ValidationToken(false, ValidationToken.InputError.INVALID_COMMAND);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isCheerInputValid(List\u003cString\u003e userInputTokens) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.size() \u003e\u003d 2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.CHEER_TOO_MANY_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andychong23"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isFindInputValid(List\u003cString\u003e userInputTokens) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.FIND_TOO_LITTLE_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"andychong23"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isDeleteInputValid(List\u003cString\u003e userInputTokens, User user) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.size() \u003e 2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"andychong23"},"content":"            // too many arguments","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.DELETE_TOO_MANY_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Integer.parseInt(userInputTokens.get(1));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"andychong23"},"content":"            // second argument not a number","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.DELETE_INCORRECT_ARGUMENT_TYPE);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"andychong23"},"content":"        if (Integer.parseInt(userInputTokens.get(1)) \u003c\u003d 0 || Integer.parseInt(userInputTokens.get(1)) \u003e user.getNumberOfTasks()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.DELETE_ARGUMENT_DOES_NOT_EXISTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"andychong23"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isEventInputValid(List\u003cString\u003e userInputTokens) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"andychong23"},"content":"        if (!(userInputTokens.contains(\"/from\") \u0026\u0026 userInputTokens.contains(\"/to\"))) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.EVENT_MISSING_FROM_TO_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"andychong23"},"content":"        int fromIndex \u003d userInputTokens.indexOf(\"/from\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"andychong23"},"content":"        int toIndex \u003d userInputTokens.indexOf(\"/to\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"andychong23"},"content":"        if (fromIndex \u003d\u003d 1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.EVENT_MISSING_EVENT_INFO);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"andychong23"},"content":"        String fromDateTime \u003d String.join(\" \",","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"andychong23"},"content":"                userInputTokens.subList(fromIndex + 1, toIndex));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"andychong23"},"content":"        if (!(InputValidator.isValidDateTime(fromDateTime, false)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"andychong23"},"content":"                || InputValidator.isValidDate(fromDateTime, false))) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.EVENT_INVALID_DATETIME);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"andychong23"},"content":"        String toDateTime \u003d String.join(\" \", userInputTokens.subList(toIndex + 1, userInputTokens.size()));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"andychong23"},"content":"        if (!(InputValidator.isValidDateTime(toDateTime, true)","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"andychong23"},"content":"                || InputValidator.isValidDate(fromDateTime, true))) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.EVENT_INVALID_DATETIME);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isDeadLineInputValid(List\u003cString\u003e userInputTokens) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (userInputTokens.size() \u003c\u003d 2) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return new ValidationToken(false, ValidationToken.InputError.DEADLINE_TOO_LITTLE_ARGUMENTS);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!userInputTokens.contains(\"/by\")) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return new ValidationToken(false, ValidationToken.InputError.DEADLINE_MISSING_BY);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        int deadLineIndex \u003d userInputTokens.indexOf(\"/by\") + 1;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (deadLineIndex \u003d\u003d userInputTokens.size()) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return new ValidationToken(false, ValidationToken.InputError.DEADLINE_MISSING_DEADLINE);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String stringDateTime \u003d String.join(\" \",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                userInputTokens.subList(deadLineIndex, userInputTokens.size()));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(InputValidator.isValidDateTime(stringDateTime, true)","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"                || InputValidator.isValidDate(stringDateTime, true))) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return new ValidationToken(false, ValidationToken.InputError.DEADLINE_INVALID_DATETIME);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isToDoInputValid(List\u003cString\u003e userInputTokens) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.TODO_TOO_LITTLE_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"andychong23"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isUnmarkInputValid(List\u003cString\u003e userInputTokens, User user) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.UNMARK_TOO_LITTLE_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.size() \u003e 2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.UNMARK_TOO_MANY_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"andychong23"},"content":"        try {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"andychong23"},"content":"            Integer.parseInt(userInputTokens.get(1));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"andychong23"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.UNMARK_INCORRECT_ARGUMENT_TYPE);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"andychong23"},"content":"        if (Integer.parseInt(userInputTokens.get(1)) \u003c 1","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"andychong23"},"content":"                || Integer.parseInt(userInputTokens.get(1)) \u003e user.getNumberOfTasks()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.INVALID_TASK_NUMBER);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isMarkInputValid(List\u003cString\u003e userInputTokens, User user) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.MARK_TOO_LITTLE_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"andychong23"},"content":"        } else if (userInputTokens.size() \u003e 2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.MARK_TOO_MANY_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            Integer.parseInt(userInputTokens.get(1));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.MARK_INCORRECT_ARGUMENT_TYPE);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"andychong23"},"content":"        if (Integer.parseInt(userInputTokens.get(1)) \u003c 1","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"andychong23"},"content":"                || Integer.parseInt(userInputTokens.get(1)) \u003e user.getNumberOfTasks()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"andychong23"},"content":"            return new ValidationToken(false, ValidationToken.InputError.INVALID_TASK_NUMBER);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return new ValidationToken(true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isByeInputValid(List\u003cString\u003e userInputTokens) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (userInputTokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return new ValidationToken(true);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"andychong23"},"content":"        return new ValidationToken(false, ValidationToken.InputError.BYE_TOO_MANY_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"andychong23"},"content":"    private static ValidationToken isListInputValid(List\u003cString\u003e userInputTokens) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"andychong23"},"content":"        if (userInputTokens.size() \u003d\u003d 1) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return new ValidationToken(true);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"andychong23"},"content":"        return new ValidationToken(false, ValidationToken.InputError.LIST_TOO_MANY_ARGUMENTS);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Method to check if the provided string follows the dd/MM or dd/MM/yyyy format","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @param stringDate String to be checked","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * @param requiresFuture Indicates if stringDate needs to be in the future","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @return boolean that indicates if it is a valid date format","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public static boolean isValidDate(String stringDate, boolean requiresFuture) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            LocalDate date \u003d LocalDate.parse(stringDate + \"/\" + Year.now(), DAY_MONTH_YEAR_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (requiresFuture) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return date.isAfter(LocalDate.now());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            LocalDate date \u003d LocalDate.parse(stringDate, DAY_MONTH_YEAR_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (requiresFuture) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"                return date.isAfter(LocalDate.now());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"            e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * Method to check if the provided string follows the dd/MM H:m or dd/MM/yyyy H:m format","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * @param stringDateTime String to be checked","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * @param requiresFuture Indicates if stringDateTime needs to be in the future","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * @return boolean that indicates if it is a valid time format","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public static boolean isValidDateTime(String stringDateTime, boolean requiresFuture) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"        List\u003cString\u003e stringDateList \u003d new ArrayList\u003c\u003e(List.of(stringDateTime.split(\" \")));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(String.join(\" \", stringDateList),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    DAY_MONTH_YEAR_TIME_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            if (requiresFuture) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"                return dateTime.isAfter(LocalDateTime.now());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"            String removedItem \u003d stringDateList.removeFirst();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"            stringDateList.addFirst(removedItem + \"/\" + Year.now());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(String.join(\" \", stringDateList),","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    DAY_MONTH_YEAR_TIME_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"            if (requiresFuture) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"                return dateTime.isAfter(LocalDateTime.now());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-04","isFullCredit":false}],"authorContributionMap":{"andychong23":106,"-":179}},{"path":"src/main/java/io/Output.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andychong23"},"content":"package io;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andychong23"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andychong23"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andychong23"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andychong23"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andychong23"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andychong23"},"content":" * Class that handles all outputs to the console","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andychong23"},"content":"class Output {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andychong23"},"content":"    private final BufferedWriter BUFFERED_WRITER \u003d new BufferedWriter(new OutputStreamWriter(System.out));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andychong23"},"content":"     * Constructor","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andychong23"},"content":"    public Output() {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andychong23"},"content":"     * Writes outputStrings to console separated by sep","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andychong23"},"content":"     * @param outputStrings List of Strings to output to the console","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andychong23"},"content":"     * @param sep           Separator used between each String in the List","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param end           End character used after the last string is written","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andychong23"},"content":"     * @throws IOException IO fails","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andychong23"},"content":"    public void printOutput(List\u003cString\u003e outputStrings, String sep, String end) throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andychong23"},"content":"        for (int i \u003d 0; i \u003c outputStrings.size(); i++) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andychong23"},"content":"            this.BUFFERED_WRITER.write(outputStrings.get(i));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andychong23"},"content":"            if (i !\u003d outputStrings.size() - 1) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andychong23"},"content":"                this.BUFFERED_WRITER.write(sep);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andychong23"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andychong23"},"content":"        this.BUFFERED_WRITER.write(end);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andychong23"},"content":"        this.BUFFERED_WRITER.flush();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andychong23"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"andychong23":36,"-":2}},{"path":"src/main/java/io/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andychong23"},"content":"package io;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import user.User;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"andychong23"},"content":"import java.io.IOException;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andychong23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"andychong23"},"content":"import java.util.List;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andychong23"},"content":"/**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":" * UI class to handle tasks related to the User Interface","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andychong23"},"content":" */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andychong23"},"content":"public class UI {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Input INPUT;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Output OUTPUT;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andychong23"},"content":"    private final String DIVIDER \u003d \"_______________\";","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andychong23"},"content":"    private final String CHATBOT_NAME;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"andychong23"},"content":"     * Constructor","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public UI(String botName, Input input, Output output) {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.CHATBOT_NAME \u003d botName;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.INPUT \u003d input;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.OUTPUT \u003d output;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andychong23"},"content":"    public UI(String botName) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andychong23"},"content":"        this.CHATBOT_NAME \u003d botName;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andychong23"},"content":"     * Get valid user input from console","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andychong23"},"content":"     * @return User input String","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getValidUserInput(User user) throws IOException {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        boolean isUserInputValid \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String userInput;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        do {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            userInput \u003d INPUT.getUserInput();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            ValidationToken validationToken \u003d InputValidator.isInputValid(userInput, user);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (validationToken.isValid()) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"                isUserInputValid \u003d true;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                List\u003cString\u003e outputMessage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                outputMessage.add(validationToken.getErrorMessage());","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                displayMessageWithDivider(outputMessage);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (!isUserInputValid);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userInput;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Displays custom message to the console with dividers","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andychong23"},"content":"     * @param messages list of messages to output to console","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"andychong23"},"content":"     * @throws IOException When IO fails","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"andychong23"},"content":"    public void displayMessageWithDivider(List\u003cString\u003e messages) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andychong23"},"content":"        messages.addFirst(this.DIVIDER);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andychong23"},"content":"        messages.add(this.DIVIDER);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andychong23"},"content":"        OUTPUT.printOutput(messages, \"\\n\", \"\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Display custom message to the console without dividers","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param messages list of messages to output to console","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws IOException When IO fails","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"andychong23"},"content":"    public void displayMessage(List\u003cString\u003e messages) throws IOException {","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"andychong23"},"content":"        OUTPUT.printOutput(messages, \"\\n\", \"\\n\");","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andychong23"},"content":"     * Display welcome message to the console","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"andychong23"},"content":"     * @throws IOException When IO fails","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"andychong23"},"content":"    public void displayWelcomeMessage() throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"andychong23"},"content":"        List\u003cString\u003e welcomeMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"andychong23"},"content":"        welcomeMessages.add(this.DIVIDER);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"andychong23"},"content":"        welcomeMessages.add(String.format(\"Hello! I\u0027m %s\", this.CHATBOT_NAME));","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"andychong23"},"content":"        welcomeMessages.add(\"What can I do for you?\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"andychong23"},"content":"        welcomeMessages.add(this.DIVIDER);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"andychong23"},"content":"        OUTPUT.printOutput(welcomeMessages, \"\\n\", \"\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"andychong23"},"content":"     * Display exit message to the console","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"andychong23"},"content":"     * @throws IOException When IO fails","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"andychong23"},"content":"    public void displayExitMessage() throws IOException {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"andychong23"},"content":"        List\u003cString\u003e exitMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"andychong23"},"content":"        exitMessages.add(this.DIVIDER);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"andychong23"},"content":"        exitMessages.add(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"andychong23"},"content":"        exitMessages.add(this.DIVIDER);","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"andychong23"},"content":"        OUTPUT.printOutput(exitMessages, \"\\n\", \"\\n\");","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getWelcomeMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cString\u003e welcomeMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        welcomeMessages.add(String.format(\"Hello! I\u0027m %s\", this.CHATBOT_NAME));","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        welcomeMessages.add(\"What can I do for you?\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return welcomeMessages;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getExitMessage() {","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cString\u003e exitMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        exitMessages.add(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return exitMessages;","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"andychong23"},"content":"}","lastModifiedDate":"2025-01-27","isFullCredit":false}],"authorContributionMap":{"andychong23":63,"-":55}},{"path":"src/main/java/io/ValidationToken.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package io;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":" * ValidationToken class that indicates validity of inputs","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ValidationToken {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private boolean isValid;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private InputError errorMessage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructor for inputs with no errors","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param isValid boolean that indicates that it is valid","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public ValidationToken(boolean isValid) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.isValid \u003d isValid;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructor for inputs with errors","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param isValid      boolean that indicates that it is not valid","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param errorMessage InputError enum that encapsulates information about the error","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ValidationToken(boolean isValid, InputError errorMessage) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.isValid \u003d isValid;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean isValid() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return isValid;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return errorMessage.getErrorMessage();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Enum class that indicates all the types of InputErrors","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * enum field follows the format \u003caction_name\u003e_\u003cproblem_information\u003e","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public enum InputError {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        LIST_TOO_MANY_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                return \"list expects 0 argument but received more than 0 arguments\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        BYE_TOO_MANY_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                return \"bye expects 0 argument but received more than 0 arguments\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        MARK_TOO_MANY_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"                return \"mark expects 1 argument but received more than 1 argument\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        MARK_INCORRECT_ARGUMENT_TYPE() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                return \"mark expects 1 argument that is an integer but received an non-integer argument\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        MARK_TOO_LITTLE_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                return \"mark expects 1 argument but received 0 arguments\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UNMARK_TOO_MANY_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                return \"unmark expects 1 argument but received more than 1 argument\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UNMARK_INCORRECT_ARGUMENT_TYPE() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                return \"unmark expects 1 argument that is an integer but received an non-integer argument\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        UNMARK_TOO_LITTLE_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                return \"unmark expects 1 argument but received 0 arguments\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        TODO_TOO_LITTLE_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"                return \"todo expects at least 1 argument but received 0 arguments\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DEADLINE_TOO_LITTLE_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                return \"deadline expects at least 2 arguments\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DEADLINE_MISSING_BY {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                return \"deadline expects \u0027/by\u0027 as one of its arguments\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DEADLINE_MISSING_DEADLINE {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                return \"deadline expects at least 1 argument after \u0027/by\u0027 but received none\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        DEADLINE_INVALID_DATETIME {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"                return \"deadline expects a datetime argument in the format dd/mm or dd/MM HH:mm or Mon \" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                        \"but received something different\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EVENT_MISSING_FROM_TO_ARGUMENTS {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                return \"event expects both /from and /to as arguments but did not receive it\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EVENT_INVALID_DATETIME {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                return \"event expects a datetime argument in the format dd/mm or dd/MM HH:mm or Mon \" +","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                        \"after /from and /to but received something different\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"andychong23"},"content":"        EVENT_MISSING_EVENT_INFO {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"andychong23"},"content":"            @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"andychong23"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"andychong23"},"content":"                return \"event expects an argument before /from to indicate what is the event name\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"andychong23"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"andychong23"},"content":"        },","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        DELETE_TOO_MANY_ARGUMENTS() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                return \"delete expects 1 argument but received more than 1 argument\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        DELETE_INCORRECT_ARGUMENT_TYPE {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                return \"delete expects an integer argument but received a non-integer argument\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"andychong23"},"content":"        DELETE_ARGUMENT_DOES_NOT_EXISTS {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"andychong23"},"content":"            @Override","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"andychong23"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"andychong23"},"content":"                return \"task number does not exists\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"andychong23"},"content":"            }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"andychong23"},"content":"        },","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        INVALID_TASK_NUMBER() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"                return \"task number provided does not exist\";","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        INVALID_COMMAND {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                return \"command listed does not exists. use todo, mark, unmark, deadline, event, delete and find instead\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        FIND_TOO_LITTLE_ARGUMENTS() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                return \"find expects at least 1 argument but received 0 arguments\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        },","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        CHEER_TOO_MANY_ARGUMENTS() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            public String getErrorMessage() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"                return \"cheer expects 0 argument but received at least 1 argument\";","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public abstract String getErrorMessage();","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"andychong23":12,"-":174}},{"path":"src/main/java/task/DeadLineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import action.ActionHandler;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andychong23"},"content":"import data.DataHandler;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import io.InputValidator;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andychong23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * DeadLineTask class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeadLineTask extends Task implements HasDeadline {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private LocalDateTime deadLineDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private LocalDate deadLineDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructor for DeadLineTask","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param taskDetail String that indicates the task details","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param deadLine   String that is a valid datetime/day format","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeadLineTask(String taskDetail, String deadLine) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(taskDetail, ActionHandler.Action.DEADLINE);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (InputValidator.isValidDate(deadLine, true)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            this.deadLineDate \u003d super.parseDate(deadLine);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            this.deadLineDateTime \u003d super.parseDateTime(deadLine);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String getDeadLine() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (this.deadLineDate \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return HasDeadline.DATE_TIME_FORMATTER.format(this.deadLineDateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return HasDeadline.DATE_FORMATTER.format(this.deadLineDate);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private String getSaveDeadLine() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (this.deadLineDate \u003d\u003d null) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return DataHandler.dateTimeSaveFormat.format(this.deadLineDateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return DataHandler.dateSaveFormat.format(this.deadLineDate);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Method to create the save data for a DeadLineTask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return String that represents the save data for a DeadLineTask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andychong23"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String createSaveData() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"andychong23"},"content":"        List\u003cString\u003e saveInformation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        saveInformation.add(super.createSaveData());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        saveInformation.add(\"/by %s\".formatted(this.getSaveDeadLine()));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"andychong23"},"content":"        return String.join(DataHandler.saveDelimiter, saveInformation);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Method to get the task information for a DeadLineTask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @return String that represents the task information for a DeadLineTask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String getTaskInformation() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cString\u003e taskInformationList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        taskInformationList.add(super.getTaskInformation());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        taskInformationList.add(\"(by: %s)\".formatted(this.getDeadLine()));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return String.join(\" \", taskInformationList);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"andychong23":9,"-":63}},{"path":"src/main/java/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import action.ActionHandler.Action;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andychong23"},"content":"import data.DataHandler;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import io.InputValidator;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andychong23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"andychong23"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * EventTask class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EventTask extends Task implements HasStart, HasDeadline {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private LocalDate toDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * EventTask constructor","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param taskDetail   String that indicates the task detail","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param fromDateTime String that is a valid datetime/day format that indicates when the event starts","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param toDateTime   String that is a valid datetime/day format that indicates when the event ends","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EventTask(String taskDetail, String fromDateTime, String toDateTime) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(taskDetail, Action.EVENT);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (InputValidator.isValidDate(fromDateTime, false)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            this.fromDate \u003d super.parseDate(fromDateTime);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            this.fromDateTime \u003d super.parseDateTime(fromDateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (InputValidator.isValidDate(toDateTime, true)) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            this.toDate \u003d super.parseDate(toDateTime);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            this.toDateTime \u003d super.parseDateTime(toDateTime);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String getDeadLine() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this.getToDateTime();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getStartDateTime() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this.getFromDateTime();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private String getFromDateTime() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (this.fromDate \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return HasStart.DATE_TIME_FORMATTER.format(this.fromDateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return HasStart.DATE_FORMATTER.format(this.fromDate);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private String getToDateTime() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (this.toDate \u003d\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return HasStart.DATE_TIME_FORMATTER.format(this.toDateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return HasStart.DATE_FORMATTER.format(this.toDate);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private String getSaveFromTime() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (this.fromDate \u003d\u003d null) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return DataHandler.dateTimeSaveFormat.format(this.fromDateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return DataHandler.dateSaveFormat.format(this.fromDate);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private String getSaveToTime() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (this.toDate \u003d\u003d null) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return DataHandler.dateTimeSaveFormat.format(this.toDateTime);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return DataHandler.dateSaveFormat.format(this.toDate);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Method to create the save data for an EventTask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @return String that represents the save data for a EventTask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"andychong23"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String createSaveData() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"andychong23"},"content":"        List\u003cString\u003e saveInformation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        saveInformation.add(super.createSaveData());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        saveInformation.add(\"/from %s /to %s\".formatted(this.getSaveFromTime(), this.getSaveToTime()));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"andychong23"},"content":"        return String.join(DataHandler.saveDelimiter, saveInformation);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Method to get the task information for an EventTask to be shown to the user","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @return String that represents the task information for an EventTask","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String getTaskInformation() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cString\u003e taskInformationList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        taskInformationList.add(super.getTaskInformation());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        taskInformationList.add(\"(from: %s to: %s)\".formatted(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                this.getStartDateTime(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                this.getDeadLine()));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return String.join(\" \", taskInformationList);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"andychong23":9,"-":97}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import action.ActionHandler.Action;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andychong23"},"content":"import data.DataHandler;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import io.InputValidator;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.Year;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"andychong23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andychong23"},"content":"import java.util.List;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Task class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private String taskDetail;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private boolean isTaskDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Action taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructor that creates a task without a type","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param taskDetail String that indicates the task information","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Deprecated","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Task(String taskDetail) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.taskDetail \u003d taskDetail;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.taskType \u003d null;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructor that creates a task with a taskType","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param taskDetail String that indicates the task information","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param taskType   Action enum that indicates the task type","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Task(String taskDetail, Action taskType) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.taskDetail \u003d taskDetail;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String getTaskDetail() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this.taskDetail;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean isTaskDone() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this.isTaskDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setTaskDone(boolean taskDone) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.isTaskDone \u003d taskDone;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Maps the task type to a String","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return String of mapped task type","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String getTaskType() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return switch (this.taskType) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            case Action.TODO -\u003e \"T\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            case Action.DEADLINE -\u003e \"D\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            case Action.EVENT -\u003e \"E\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            default -\u003e \"\";","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Maps actionString to an action enum","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param actionString String that indicates the task type","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return Action enum that indicates the enum for that string","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"andychong23"},"content":"    public static Action mapTaskType(String actionString) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"andychong23"},"content":"        return switch (actionString) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"andychong23"},"content":"            case \"T\" -\u003e Action.TODO;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"andychong23"},"content":"            case \"D\" -\u003e Action.DEADLINE;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"andychong23"},"content":"            case \"E\" -\u003e Action.EVENT;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"andychong23"},"content":"            default -\u003e Action.DEFAULT;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"andychong23"},"content":"        };","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Method to create save data for the task","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @return String of data to be written to storage","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String createSaveData() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"andychong23"},"content":"        List\u003cString\u003e saveInformation \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"andychong23"},"content":"        saveInformation.add(this.getTaskType());","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"andychong23"},"content":"        saveInformation.add(String.valueOf(this.isTaskDone() ? 1 : 0));","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"andychong23"},"content":"        saveInformation.add(this.taskDetail);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"andychong23"},"content":"        return String.join(DataHandler.saveDelimiter, saveInformation);","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Method to get task information to be displayed to the user","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return String of data that indicates the task information","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public String getTaskInformation() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return \"[%s] [%s] %s\".formatted(this.getTaskType(),","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                (this.isTaskDone()) ? \"X\" : \" \",","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"                this.getTaskDetail());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Method to parse stringDateTime to a LocalDateTime object","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Precondition: stringDateTime must be a valid representation of a LocalDateTime","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @param stringDateTime String that indicates the datetime","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @return LocalDateTime object of the string representation","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    protected LocalDateTime parseDateTime(String stringDateTime) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cString\u003e stringDateList \u003d new ArrayList\u003c\u003e(List.of(stringDateTime.split(\" \")));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return LocalDateTime.parse(String.join(\" \", stringDateList), InputValidator.DAY_MONTH_YEAR_TIME_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"            e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String removedItem \u003d stringDateList.removeFirst();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            stringDateList.addFirst(removedItem + \"/\" + Year.now());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return LocalDateTime.parse(String.join(\" \", stringDateList), InputValidator.DAY_MONTH_YEAR_TIME_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"            e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        throw new IllegalArgumentException(\"Input is not correct\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Method to parse stringDate to a LocalDate object","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Precondition: stringDate must be a valid representation of a LocalDate","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @param stringDate String that indicates the date","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @return LocalDate object of the string representation","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected LocalDate parseDate(String stringDate) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // parse information without a year","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return LocalDate.parse(stringDate + \"/\" + Year.now(), InputValidator.DAY_MONTH_YEAR_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return LocalDate.parse(stringDate, InputValidator.DAY_MONTH_YEAR_FORMATTER);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            e.getMessage();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        throw new IllegalArgumentException(\"Input is not correct\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"andychong23":20,"-":138}},{"path":"src/main/java/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import action.ActionHandler;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * ToDoTask class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Constructor for Todo Task","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * @param taskDetail String that indicates the task details","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ToDoTask(String taskDetail) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(taskDetail, ActionHandler.Action.TODO);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andychong23"},"content":"    @Override","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String createSaveData() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return super.createSaveData();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"andychong23":3,"-":19}},{"path":"src/main/java/user/User.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package user;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"andychong23"},"content":"import action.ActionHandler;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"andychong23"},"content":"import data.DataHandler;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import task.Task;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"andychong23"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"andychong23"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * User class","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class User {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andychong23"},"content":"    private Path dataFilePath;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Default Constructor for User","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public User() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andychong23"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructor that saves the user data based on the name provided","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param userName String that indicates the name of the user","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws IOException Thrown when the file does not exist","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public User(String userName) throws IOException {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andychong23"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.dataFilePath \u003d DataHandler.programRoot.resolve(\"data\").resolve(\"%s.txt\".formatted(userName));","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        buildTaskList(DataHandler.readFile(dataFilePath));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Method to build the taskList from the input data","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param inputDataList List of String where each entry is the save information for a task","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"andychong23"},"content":"    private void buildTaskList(List\u003cString\u003e inputDataList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"andychong23"},"content":"        for (String inputData : inputDataList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            // Added escape character for | as \"|\" is considered as an or operator in regex","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            List\u003cString\u003e data \u003d List.of(inputData.split(\"\\\\%s\".formatted(DataHandler.saveDelimiter)));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            // Recreate the task details from the saved file","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            // Format of todo save: taskType|isTaskDone|taskDetails","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            // Format of deadline save: taskType|isTaskDone|taskDetails|/by dateTime","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            // Format of event save: taskType|isTaskDone|taskDetails|/from dateTime /to toDateTime","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            List\u003cString\u003e taskDetails \u003d List.of(String.join(\" \", data.subList(2, data.size())).split(\" \"));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Task taskCreated \u003d ActionHandler.createTask(","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"andychong23"},"content":"                    Task.mapTaskType(data.getFirst()),","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    taskDetails);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (taskCreated !\u003d null) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                taskCreated.setTaskDone(Boolean.parseBoolean(data.get(1)));","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                addTask(taskCreated);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.taskList.addLast(task);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * getTaskList method that returns a string representation of the task list currently","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return String that represents the task list currently","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String getTaskList() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            stringBuilder.append(\"%s. %s\".formatted(","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    i + 1,","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    task.getTaskInformation())","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String getTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            stringBuilder.append(\"%s. %s\".formatted(","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    i + 1,","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                    task.getTaskInformation())","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets task to be done","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param taskNumber int that indicates the task to set","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return String representation of updated task information","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String markTaskAsDone(int taskNumber) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Task requiredTask \u003d this.taskList.get(taskNumber);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requiredTask.setTaskDone(true);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return requiredTask.getTaskInformation();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Sets task to be not done","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @param taskNumber int that indicates the task to set","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @return String representation of updated task information","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String markTaskAsNotDone(int taskNumber) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Task requiredTask \u003d this.taskList.get(taskNumber);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requiredTask.setTaskDone(false);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return requiredTask.getTaskInformation();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return this.taskList.size();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Deletes task from the task list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @param taskNumber int that indicates the task to delete, taskNumber is 0-indexed","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @return String representation of deleted task information","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Task requiredTask \u003d this.taskList.get(taskNumber);","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String removedTaskInformation \u003d requiredTask.getTaskInformation();","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        this.taskList.remove(taskNumber);","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return removedTaskInformation;","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Method to create save data for a user","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @return List of String that holds the save data for all tasks","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e createSaveData() {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"andychong23"},"content":"        List\u003cString\u003e saveInformationList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"andychong23"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            saveInformationList.add(task.createSaveData());","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"andychong23"},"content":"        }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"andychong23"},"content":"        return saveInformationList;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"andychong23"},"content":"","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"andychong23"},"content":"    public Path getDataFilePath() {","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"andychong23"},"content":"        return dataFilePath;","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"andychong23"},"content":"    }","lastModifiedDate":"2025-02-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public List\u003cTask\u003e findTaskWithKeyWord(String keyWord) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            // case-insensitive search","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"andychong23"},"content":"            for (int i \u003d 0; i \u003c task.getTaskDetail().length(); i++) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                if (task.getTaskDetail().regionMatches(true, i, keyWord, 0, keyWord.length())) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return foundTasks;","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"andychong23":25,"-":149}},{"path":"src/test/java/io/InputValidatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package io;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.params.provider.CsvSource;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import user.User;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class InputValidatorTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    User user;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andychong23"},"content":"     * Set up a User that can be used to do testing","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"andychong23"},"content":"     * @throws IOException If data file does not exists","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void setUp() throws IOException {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        user \u003d new User(\"test\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple date inputs and tests whether isValidDate evaluates the dates correctly","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"andychong23"},"content":"     * @param input String of a potential date","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andychong23"},"content":"     * @param requiresFuture boolean that indicates if the input has to be in the future","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"04/02, true, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \"12/12, true, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \"04/02, false, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"04/02/2025, true, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \"12/12/2025, true, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \"04/02/2025, false, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \"abcd, true, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \"12/12/2025 14:00, false, false\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void test_IsValidDate(String input, boolean requiresFuture, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isValidDate(input, requiresFuture));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple datetime inputs and tests whether isValidDateTime evaluates the datetime correctly","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"andychong23"},"content":"     * @param input String of a potential datetime","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"andychong23"},"content":"     * @param requiresFuture boolean that indicates if the input has to be in the future","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \"04/02, true, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \"12/12, true, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \"04/02 12:00, true, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \"04/02 12:00, false, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \"12/12/2025 12:00, true, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \"12/12/2025 80:00, true, false\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void test_IsValidDateTime(String input, boolean requiresFuture, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isValidDateTime(input, requiresFuture));","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple mark/unmark inputs and tests whether the provided format is correct","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"andychong23"},"content":"     * @param userInput String of a potential mark/unmark input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \"mark 2, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \"mark 1, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \"unmark 2, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \"unmark 1, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            \" mark 2, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            \" mark 1, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"mark  1, false\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void test_IsMarkInputValid(String userInput, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isInputValid(userInput, user).isValid());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple deadline inputs and tests whether the provided format is correct","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"andychong23"},"content":"     * @param userInput String of a potential deadline input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \"deadline return book /by 12/12, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \"deadline /by 04/02, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \"deadline return book 04/02, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \"DEADLINE return book /by 12/12, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \"DEADline return book /by 12/12, true\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void test_IsDeadLineInputValid(String userInput, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isInputValid(userInput, user).isValid());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple event inputs and tests whether the provided format is correct","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"andychong23"},"content":"     * @param userInput String of a potential event input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \"event networking /from 12/12 /to 13/12, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \"event networking /from 11/11 11:00 /to 12/12 12:00, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \"event sleep /from 04/02 /to 04/02, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \"event sleep /from 04/02 /to 03/02, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            \"event sleep /from 11/11 /to 12/12 12:00, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"andychong23"},"content":"            \"event /from 11/11 /to 12/12, false\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void test_IsEventInputValid(String userInput, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isInputValid(userInput, user).isValid());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple todo event inputs and tests whether the provided format is correct","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"andychong23"},"content":"     * @param userInput String of a potential todo input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"            \"todo return book, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            \"TOdo return book, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"            \" todo return book, true\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void test_IsToDoInputValid(String userInput, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isInputValid(userInput, user).isValid());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple bye inputs and tests whether the provided format is correct","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"andychong23"},"content":"     * @param userInput String of a potential bye input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"            \"bye, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            \" bye, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            \"bye , true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"andychong23"},"content":"            \" bye , true\",","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"andychong23"},"content":"            \"bye a, false\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void test_IsByeInputValid(String userInput, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isInputValid(userInput, user).isValid());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"andychong23"},"content":"     * This test takes in multiple delete inputs and tests whether the provided format is correct","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"andychong23"},"content":"     * @param userInput String of a potential delete input","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"andychong23"},"content":"     * @param expected Expected result of each test case","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @ParameterizedTest","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @CsvSource({","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            \"delete 2, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \"delete 1, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            \"delete 0, false\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            \"delete 1 , true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \" delete 1, true\",","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"            \"delete  1, true\"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    })","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void test_IsDeleteInputValid(String userInput, boolean expected) {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expected, InputValidator.isInputValid(userInput, user).isValid());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"andychong23":49,"-":118}},{"path":"src/test/java/task/DeadLineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class DeadLineTaskTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    static DeadLineTask dateDeadLineTaskOne;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    static DeadLineTask dateDeadLineTaskTwo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    static DeadLineTask dateTimeDeadLineTaskOne;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    static DeadLineTask dateTimeDeadLineTaskTwo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andychong23"},"content":"     * Initial set up of test conditions","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @BeforeAll","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void setUp() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        dateDeadLineTaskOne \u003d new DeadLineTask(\"test\", \"12/12\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        dateDeadLineTaskTwo \u003d new DeadLineTask(\"test\", \"12/12/2026\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        dateTimeDeadLineTaskOne \u003d new DeadLineTask(\"test\", \"12/12 12:00\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        dateTimeDeadLineTaskTwo \u003d new DeadLineTask(\"test\", \"12/12 09:00\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        dateDeadLineTaskOne.setTaskDone(true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andychong23"},"content":"     * Tests for formatting of getDeadLine","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void test_GetDeadline() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2025\", dateDeadLineTaskOne.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2026\", dateDeadLineTaskTwo.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2025 12:00pm\", dateTimeDeadLineTaskOne.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2025 09:00am\", dateTimeDeadLineTaskTwo.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andychong23"},"content":"     * Tests for formatting of createSaveData","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_CreateSaveData() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(\"D|1|test|/by 12/12/2025\", dateDeadLineTaskOne.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(\"D|0|test|/by 12/12/2026\", dateDeadLineTaskTwo.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"D|0|test|/by 12/12/2025 12:00\", dateTimeDeadLineTaskOne.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"D|0|test|/by 12/12/2025 09:00\", dateTimeDeadLineTaskTwo.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andychong23"},"content":"     * Tests for formatting of getTaskInformation","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void test_GetTaskInformation() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(\"[D] [X] test (by: 12 Dec 2025)\", dateDeadLineTaskOne.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(\"[D] [ ] test (by: 12 Dec 2026)\", dateDeadLineTaskTwo.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(\"[D] [ ] test (by: 12 Dec 2025 12:00pm)\", dateTimeDeadLineTaskOne.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(\"[D] [ ] test (by: 12 Dec 2025 09:00am)\", dateTimeDeadLineTaskTwo.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"andychong23":12,"-":47}},{"path":"src/test/java/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class EventTaskTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    static EventTask dateEventTaskOne;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    static EventTask dateEventTaskTwo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    static EventTask dateTimeEventTaskOne;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    static EventTask dateTimeEventTaskTwo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"andychong23"},"content":"     * Initial set up of test conditions","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @BeforeAll","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void setUp() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        dateEventTaskOne \u003d new EventTask(\"test\", \"12/12\", \"14/12\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        dateEventTaskTwo \u003d new EventTask(\"test\", \"12/12/2026\", \"14/12/2026 14:00\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        dateTimeEventTaskOne \u003d new EventTask(\"test\", \"12/12 12:00\", \"14/12 09:00\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        dateTimeEventTaskTwo \u003d new EventTask(\"test\", \"12/12 09:00\", \"14/12/2026\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        dateEventTaskOne.setTaskDone(true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"andychong23"},"content":"     * Tests for formatting of getDeadLine","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void test_GetDeadline() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(\"14 Dec 2025\", dateEventTaskOne.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(\"14 Dec 2026 02:00pm\", dateEventTaskTwo.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(\"14 Dec 2025 09:00am\", dateTimeEventTaskOne.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(\"14 Dec 2026\", dateTimeEventTaskTwo.getDeadLine());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"andychong23"},"content":"     * Tests for formatting of getStartDateTime","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_GetStartDateTime() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2025\", dateEventTaskOne.getStartDateTime());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2026\", dateEventTaskTwo.getStartDateTime());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2025 12:00pm\", dateTimeEventTaskOne.getStartDateTime());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"12 Dec 2025 09:00am\", dateTimeEventTaskTwo.getStartDateTime());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"andychong23"},"content":"     * Tests for formatting of createSaveData","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void test_CreateSaveData() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(\"E|1|test|/from 12/12/2025 /to 14/12/2025\", dateEventTaskOne.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(\"E|0|test|/from 12/12/2026 /to 14/12/2026 14:00\", dateEventTaskTwo.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(\"E|0|test|/from 12/12/2025 12:00 /to 14/12/2025 09:00\", dateTimeEventTaskOne.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(\"E|0|test|/from 12/12/2025 09:00 /to 14/12/2026\", dateTimeEventTaskTwo.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"andychong23"},"content":"     * Tests for formatting of getTaskInformation","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void test_GetTaskInformation() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(\"[E] [X] test (from: 12 Dec 2025 to: 14 Dec 2025)\", dateEventTaskOne.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(\"[E] [ ] test (from: 12 Dec 2026 to: 14 Dec 2026 02:00pm)\", dateEventTaskTwo.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(\"[E] [ ] test (from: 12 Dec 2025 12:00pm to: 14 Dec 2025 09:00am)\", dateTimeEventTaskOne.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(\"[E] [ ] test (from: 12 Dec 2025 09:00am to: 14 Dec 2026)\", dateTimeEventTaskTwo.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"andychong23":15,"-":55}},{"path":"src/test/java/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package task;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    static ToDoTask toDoTaskOne;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    static ToDoTask toDoTaskTwo;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"andychong23"},"content":"     * Initial set up of test conditions","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @BeforeAll","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void setUp() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        toDoTaskOne \u003d new ToDoTask(\"test\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        toDoTaskTwo \u003d new ToDoTask(\"get apples\");","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        toDoTaskOne.setTaskDone(true);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"andychong23"},"content":"     * Test for formatting of createSaveData","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void test_CreateSaveData() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(\"T|1|test\", toDoTaskOne.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(\"T|0|get apples\", toDoTaskTwo.createSaveData());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"andychong23"},"content":"    /**","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"andychong23"},"content":"     * Test for formatting of getTaskInformation","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"andychong23"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void test_GetTaskInformation() {","lastModifiedDate":"2025-02-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"[T] [X] test\", toDoTaskOne.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"[T] [ ] get apples\", toDoTaskTwo.getTaskInformation());","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"andychong23":9,"-":31}}]
