[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.1.0\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"javafx {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"    version \u003d \u002721.0.1\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027]","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    String javaFxVersion \u003d \u002721.0.1\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"//    mainClass.set(\"PawPal.core.PawPal\")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"    mainClass.set(\"pawpal.core.Launcher\")","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"    archiveBaseName \u003d \"PawPal\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"    archiveVersion \u003d \"1.0.0\"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"java {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_21","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_21","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"    options.encoding \u003d \u0027UTF-8\u0027","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-12","isFullCredit":false}],"authorContributionMap":{"friedrice231":34,"-":39}},{"path":"data/cheer.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"Keep going – even the best programmers started out writing \u0027Hello World\u0027!","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"Your code might crash, but you won\u0027t!","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"Debugging is like being a detective in a crime movie where you are also the murderer.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"One bug at a time, one solution closer.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"Never stop learning – the tech world moves fast, and so should you.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"A bad day coding beats a good day doing anything else.","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"friedrice231":6}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"[T][X] run","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"[D][ ] test (by: tomorrow)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"[E][ ] test from: today to: tomorrow","lastModifiedDate":"2025-02-21","isFullCredit":false}],"authorContributionMap":{"friedrice231":3}},{"path":"src/main/java/pawpal/core/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.Node;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":" * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":" * and a label containing text from the speaker.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    private Label dialog;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"            fxmlLoader.load();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"        dialog.setText(text);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"    private void flip() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"        dialog.getStyleClass().add(\"reply-label\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"        db.flip();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"        return db;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"friedrice231":61}},{"path":"src/main/java/pawpal/core/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":" * Launches a JavaFX launcher","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"public class Launcher {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"friedrice231":12}},{"path":"src/main/java/pawpal/core/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import javafx.application.Application;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"public class Main extends Application {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"    private final PawPal pawpal \u003d new PawPal();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"    @Override","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"            Image icon \u003d","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"                    new Image(String.valueOf(Objects.requireNonNull(Main.class.getResource(\"/images/cat-icon.png\"))));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"            stage.setScene(scene);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"            stage.setMinHeight(220);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"            stage.setMinWidth(417);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPawPal(pawpal); // inject the Duke instance","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"            stage.setTitle(\"PawPal\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"            stage.show();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"            System.out.println(e.getMessage());;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"friedrice231":40}},{"path":"src/main/java/pawpal/core/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.util.Objects;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import javafx.application.Platform;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.Printer;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":" * Controller for the main GUI.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    private TextField userInput;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"    private Button sendButton;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    private PawPal pawpal;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"    private final Image userImage \u003d new Image(Objects","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"            .requireNonNull(this.getClass().getResourceAsStream(\"/images/cat-right.png\")));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"    private final Image dukeImage \u003d new Image(Objects","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"            .requireNonNull(this.getClass().getResourceAsStream(\"/images/cat-left.png\")));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"    public void initialize() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"    /** Injects the Duke instance */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"    public void setPawPal(PawPal p) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"        pawpal \u003d p;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"        String greeting \u003d Printer.getGreetingMessage(\"PawPal\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"    @FXML","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"    private void handleUserInput() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"        String response \u003d pawpal.getResponse(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"        );","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"        userInput.clear();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"        if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"            Platform.exit();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"friedrice231":64}},{"path":"src/main/java/pawpal/core/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.Command;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.Printer;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":" * Parses and processes user input for PawPal.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"class Parser {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"    public String parse(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"        Command command \u003d parseCommand(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"        switch (command) {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"        case LIST:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"            return Printer.getTaskListString(taskList.getTasks());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"        case MARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"            return processMarkCommand(input, true);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"        case UNMARK:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"            return processMarkCommand(input, false);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"        case TODO:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"            return processToDoCommand(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"        case DEADLINE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"            return processDeadlineCommand(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"        case EVENT:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"            return processEventCommand(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"        case DELETE:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"            return processDeleteCommand(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"        case FIND:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"            return processFindCommand(input);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"        case CHEER:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"            return processCheerCommand();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"        case BYE:","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"            return processByeCommand();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"        case SORT:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"            return processSortCommand();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"        default:","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"            return Printer.getInvalidCommandMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"    Command parseCommand(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"            return Command.valueOf(input.split(\" \")[0].toUpperCase());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"            return Command.INVALID;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"    // Helper to parse task number from input","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"    private int parseTaskNumber(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"        return Integer.parseInt(parts[1].trim());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"    private String processMarkCommand(String input, boolean mark) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"            int taskNumber \u003d Integer.parseInt(input.split(\" \")[1].trim());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"            return mark ? taskList.markTask(taskNumber) : taskList.unmarkTask(taskNumber);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"            return Printer.getInvalidTaskNumberMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"friedrice231"},"content":"    private String processDeleteCommand(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"friedrice231"},"content":"            int taskNumber \u003d Integer.parseInt(input.split(\" \")[1].trim());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"friedrice231"},"content":"            return taskList.deleteTask(taskNumber);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"friedrice231"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"friedrice231"},"content":"            return Printer.getInvalidTaskNumberMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"friedrice231"},"content":"    /*","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"friedrice231"},"content":"    Checks that the user has used the Todo command correctly","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"friedrice231"},"content":"    private String processToDoCommand(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"friedrice231"},"content":"        if (input.trim().equalsIgnoreCase(\"todo\") || input.length() \u003c\u003d 4) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"friedrice231"},"content":"            return Printer.getTodoUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"friedrice231"},"content":"        // Extract description","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"friedrice231"},"content":"        String description \u003d input.substring(4).trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"friedrice231"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"friedrice231"},"content":"            return Printer.getTodoUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"friedrice231"},"content":"        // Add the ToDo if valid","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"friedrice231"},"content":"        return taskList.addToDo(description);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"friedrice231"},"content":"    /*","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"friedrice231"},"content":"    Checks that the user has used the deadline command correctly","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"friedrice231"},"content":"    private String processDeadlineCommand(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"friedrice231"},"content":"        if (input.trim().equalsIgnoreCase(\"deadline\") || input.length() \u003c\u003d 9) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"friedrice231"},"content":"            return Printer.getDeadlineUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"friedrice231"},"content":"        // After removing \"deadline \", split by \" /by \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"friedrice231"},"content":"        String[] parts \u003d input.substring(9).split(\" /by \", 2);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"friedrice231"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"friedrice231"},"content":"            return Printer.getDeadlineUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"friedrice231"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"friedrice231"},"content":"        String deadline \u003d parts[1].trim();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"friedrice231"},"content":"        // Ensure both parts are non-empty","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"friedrice231"},"content":"        if (description.isEmpty() || deadline.isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"friedrice231"},"content":"            return Printer.getDeadlineUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"friedrice231"},"content":"        return taskList.addDeadline(description, deadline);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"friedrice231"},"content":"    /*","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"friedrice231"},"content":"    Checks that the user has used the event command correctly","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"friedrice231"},"content":"    private String processEventCommand(String input) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"friedrice231"},"content":"        if (input.trim().equalsIgnoreCase(\"event\") || input.length() \u003c\u003d 6) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"friedrice231"},"content":"            return Printer.getEventUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"friedrice231"},"content":"        // After removing \"event \", split by \" /from \" and \" /to \"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"friedrice231"},"content":"        String[] parts \u003d input.substring(6).split(\" /from | /to \", 3);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"friedrice231"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"friedrice231"},"content":"            return Printer.getEventUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"friedrice231"},"content":"        String description \u003d parts[0].trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"friedrice231"},"content":"        String from \u003d parts[1].trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"friedrice231"},"content":"        String to \u003d parts[2].trim();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"friedrice231"},"content":"        // Ensure no empty pieces","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"friedrice231"},"content":"        if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"friedrice231"},"content":"            return Printer.getEventUsageMessage();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"friedrice231"},"content":"        return taskList.addEvent(description, from, to);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"friedrice231"},"content":"    private String processFindCommand(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"friedrice231"},"content":"        return taskList.findTasks(input.substring(4).trim());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"friedrice231"},"content":"    private String processCheerCommand() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"friedrice231"},"content":"            return taskList.getRandomQuote();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"friedrice231"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"friedrice231"},"content":"            return \"Error retrieving cheer message.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"friedrice231"},"content":"    private String processSortCommand() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"friedrice231"},"content":"        taskList.sortTasks();","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"friedrice231"},"content":"        return Printer.getTaskListString(taskList.getTasks());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"friedrice231"},"content":"    private String processByeCommand() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"friedrice231"},"content":"        return Printer.printBye();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"friedrice231":162}},{"path":"src/main/java/pawpal/core/PawPal.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.Storage;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.TaskList;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.Ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":" * The main class for the PawPal chatbot application.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":" * PawPal allows users to manage tasks such as ToDo, Deadline, and Event tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":" * It interacts with the user via the command line.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PawPal {","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"    private final Ui ui;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"    private final TaskList taskList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"    private final Parser parser;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new PawPal.core.PawPal instance.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"     * Initializes the storage, task list, UI, and parser components.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    public PawPal() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"        String filePath \u003d \"./data/tasks.txt\";","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"        this.taskList \u003d new TaskList(storage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"     * The entry point of the PawPal application.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"     * @param args Command-line arguments (not used).","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"        new PawPal().run();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"    /*","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"    Gets the response to reply in the app.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"            String response \u003d this.parser.parse(input); // Processes the command","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"            storage.saveTasks(taskList.getTasks()); // Save updated tasks after processing","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"            return response;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"            return \"An error occurred while saving tasks.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"     * Runs the main loop of the PawPal.core.PawPal chatbot.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"     * Continuously reads user input, processes commands, and prints responses.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"     * The loop exits when the user enters the \"bye\" command.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"    public void run() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"        ui.showGreeting();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"        // Main input loop","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"        while (true) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"            // Exit the application when the user types \"bye\"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"                ui.showBye();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"                break;","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"            }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"            // Pass the user input to the parser for processing","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"            parser.parse(input);","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"            try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"                storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"            } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"friedrice231"},"content":"                ui.showSavingError();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"friedrice231"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-01-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-01-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-01-24","isFullCredit":false}],"authorContributionMap":{"friedrice231":75,"-":3}},{"path":"src/main/java/pawpal/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import java.util.Optional;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":" * Extends the Task class by adding a deadline field.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"    private final Optional\u003cLocalDateTime\u003e deadlineDateTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"    private final String deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"     * @param deadline    The date or time by which the task must be completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"        this.deadlineDateTime \u003d parseDateTime(deadline);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"     * Parses the given deadline string into LocalDateTime if possible.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"     * @param deadline The input deadline string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"     * @return An Optional containing the parsed LocalDateTime, or empty if parsing fails.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"    private Optional\u003cLocalDateTime\u003e parseDateTime(String deadline) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"            return Optional.of(LocalDateTime.parse(deadline, INPUT_FORMAT));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"     * Returns the string representation of the deadline task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"     * @return A string in the format \"[D][status] description (by: deadline)\".","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"        String formattedDeadline \u003d deadlineDateTime","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"                .map(dateTime -\u003e dateTime.format(OUTPUT_FORMAT))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"                .orElse(deadline);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDeadline + \")\";","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"friedrice231":56}},{"path":"src/main/java/pawpal/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import java.util.Optional;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":" * Represents a task that has a specific time range (start and end).","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":" * Extends the Task class by adding start and end times.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"public class Event extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, h:mm a\");","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"    private final String start;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"    private final String end;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"    private final Optional\u003cLocalDateTime\u003e startDateTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    private final Optional\u003cLocalDateTime\u003e endDateTime;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"     * @param start       The starting time of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"     * @param end         The ending time of the event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"        this.start \u003d start;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"        this.end \u003d end;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"        this.startDateTime \u003d parseDateTime(start);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"        this.endDateTime \u003d parseDateTime(end);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"        assert startDateTime.isEmpty() || endDateTime.isEmpty() || !startDateTime.get().isAfter(endDateTime.get())","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"                : \"Event start date/time should not be after end date/time\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"     * Parses the given date-time string into LocalDateTime if possible.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"     * @param dateTime The input date-time string.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"     * @return An Optional containing the parsed LocalDateTime, or empty if parsing fails.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"    private Optional\u003cLocalDateTime\u003e parseDateTime(String dateTime) {","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"            return Optional.of(LocalDateTime.parse(dateTime, INPUT_FORMAT));","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"     * Returns the string representation of the event task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"     * @return A string in the format \"[E][status] description from: start to: end\".","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"        String formattedStart \u003d startDateTime","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"                .map(dateTime -\u003e dateTime.format(OUTPUT_FORMAT))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"                .orElse(start);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"        String formattedEnd \u003d endDateTime","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"                .map(dateTime -\u003e dateTime.format(OUTPUT_FORMAT))","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"                .orElse(end);","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"        return \"[E]\" + super.toString() + \" from: \" + formattedStart + \" to: \" + formattedEnd;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"friedrice231":69}},{"path":"src/main/java/pawpal/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.util.Optional;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":" * Represents a generic task with a description and completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":" * This class serves as the base class for specific task types such as ToDo, Deadline, and Event.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"    protected String description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new Task instance.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"     * @param description The description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"    public Task(String description) {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"        assert description.isEmpty() : \"Description should not be empty!\";","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"        this.isDone \u003d false; // Tasks are not done by default","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"     * Returns the status icon representing the task\u0027s completion status.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"     * @return \"X\" if the task is done, otherwise a blank space \" \".","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"     * Marks the task as completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"    public void markAsDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"        isDone \u003d true;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"     * Marks the task as not completed.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"        isDone \u003d false;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"     * Returns the description of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"     * @return The task description.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"    public String getDescription() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"        return description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"     * Returns priority order of task type:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"     * 0 - ToDo","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"     * 1 - Deadline","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"     * 2 - Event","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"    protected int getTaskTypePriority() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"        return switch (this) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"            case ToDo toDo -\u003e 0;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"            case Deadline deadline -\u003e 1;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"            case Event event -\u003e 2;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"            default -\u003e 3;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"        };","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"     * Retrieves the relevant date-time for sorting.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"friedrice231"},"content":"     * ToDo tasks return MAX value to always stay in order.","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"friedrice231"},"content":"    protected Optional\u003cLocalDateTime\u003e getSortDateTime() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"friedrice231"},"content":"        return Optional.empty(); // Default for ToDo tasks","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"friedrice231"},"content":"    @Override","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"friedrice231"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"friedrice231"},"content":"        int typeComparison \u003d Integer.compare(this.getTaskTypePriority(), other.getTaskTypePriority());","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"friedrice231"},"content":"        if (typeComparison !\u003d 0) {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"friedrice231"},"content":"            return typeComparison; // Sort by task type first","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"friedrice231"},"content":"        // If same type, compare by date","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"friedrice231"},"content":"        return this.getSortDateTime().orElse(LocalDateTime.MAX)","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"friedrice231"},"content":"                .compareTo(other.getSortDateTime().orElse(LocalDateTime.MAX));","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"friedrice231"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"friedrice231"},"content":"     * @return A string in the format \"[status] description\".","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"friedrice231"},"content":"    @Override","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"friedrice231"},"content":"    public String toString() {","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"friedrice231"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-28","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-01-28","isFullCredit":false}],"authorContributionMap":{"friedrice231":100}},{"path":"src/main/java/pawpal/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.tasks;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":" * Represents a task without a specific deadline or time range.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":" * This class extends the Task class.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"public class ToDo extends Task {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"    public ToDo(String description) {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"        super(description);","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"     * @return A string in the format \"[T][status] description\".","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    @Override","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    public String toString() {","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-01-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-01-30","isFullCredit":false}],"authorContributionMap":{"friedrice231":27}},{"path":"src/main/java/pawpal/utils/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.utils;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":" * List of accepted commands by PawPal.","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"public enum Command {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"    LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, CHEER, BYE, SORT, INVALID","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"friedrice231":8}},{"path":"src/main/java/pawpal/utils/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.utils;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.util.List;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":" * Defines the printer class and its statements.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"public class Printer {","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"    // Added methods for greeting, bye, and error messages","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"    public static String getGreetingMessage(String appName) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"        return \"Hello from \" + appName + \"!\\nWhat can I do for you?\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"    public static String getByeMessage() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"        return \"Goodbye! Hope to see you again soon!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    public static String getLoadingErrorMessage() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"        return \"Error loading tasks from file.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"    public static String getSavingErrorMessage() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"        return \"Error saving tasks to file.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"    // Existing task-related messages","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"    public static String getTaskAddedMessage(String description, int taskCount) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"        return \"Task added: \" + description + \"\\nNow you have \" + taskCount + \" tasks.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"    public static String getTaskDeletedMessage(Task task, int taskCount) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"        return \"Task removed: \" + task + \"\\nNow you have \" + taskCount + \" tasks left.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"    public static String getTaskMarkedMessage(Task task) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"        return \"Task marked as done:\\n\" + task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"    public static String getTaskUnmarkedMessage(Task task) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"        return \"Task marked as not done:\\n\" + task;","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"    public static String getTaskListString(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"            return \"No tasks in your list!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are your tasks:\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"            sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"    public static String getMatchingTasksMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"            return \"No matching tasks found.\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Matching tasks:\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"            sb.append((i + 1)).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"        return sb.toString().trim();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"    public static String getInvalidTaskNumberMessage() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"        return \"Invalid task number!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"    public static String getInvalidCommandMessage() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"        return \"Invalid command!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"friedrice231"},"content":"    public static String printBye() {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"friedrice231"},"content":"        return \"Bye! I\u0027ll miss you\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"friedrice231"},"content":"    public static String getTodoUsageMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"friedrice231"},"content":"        return \"Please use the correct format for a ToDo:\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"friedrice231"},"content":"                + \"  todo \u003cdescription\u003e\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"friedrice231"},"content":"    public static String getDeadlineUsageMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"friedrice231"},"content":"        return \"Please use the correct format for a Deadline:\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"friedrice231"},"content":"                + \"  deadline \u003cdescription\u003e /by \u003cdeadline info\u003e\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"friedrice231"},"content":"    public static String getEventUsageMessage() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"friedrice231"},"content":"        return \"Please use the correct format for an Event:\\n\"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"friedrice231"},"content":"                + \"  event \u003cdescription\u003e /from \u003cstart\u003e /to \u003cend\u003e\";","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"friedrice231":95}},{"path":"src/main/java/pawpal/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.utils;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import java.io.File;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import java.io.FileReader;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"import java.util.Optional;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"import java.util.Random;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":" * Handles loading and saving tasks from and to a file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"public class Storage {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    private final String taskFilePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new Storage instance.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"     * @param filePath The path to the file where tasks are stored.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"        this.taskFilePath \u003d filePath;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"     * Loads tasks from the file and returns them as a list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"     * @return A list of tasks loaded from the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"    public List\u003cTask\u003e loadTasks() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"        File file \u003d new File(taskFilePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"            return tasks; // Return an empty list if the file doesn\u0027t exist","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"            String line;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"                Optional\u003cTask\u003e maybeTask \u003d parseTask(line);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"                maybeTask.ifPresent(tasks::add);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"        return tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"     * Saves the current list of tasks to the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"     * @throws IOException If an error occurs while writing to the file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"        File file \u003d new File(taskFilePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"        file.getParentFile().mkdirs(); // Ensure the directory exists","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file))) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"                writer.write(task.toString());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"                writer.newLine();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"friedrice231"},"content":"     * Parses a line from the task file and creates the corresponding task object.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"friedrice231"},"content":"     * @param line The line representing a task in the saved file.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"friedrice231"},"content":"     * @return The parsed task object, or null if the line is malformed.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"friedrice231"},"content":"    private Optional\u003cTask\u003e parseTask(String line) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"friedrice231"},"content":"        // Guard clause: blank line or null","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"friedrice231"},"content":"        if (line \u003d\u003d null || line.isBlank()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"friedrice231"},"content":"        // Validate length to avoid IndexOutOfBounds","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"friedrice231"},"content":"        if (line.length() \u003c 7) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"friedrice231"},"content":"            System.out.println(\"Skipping malformed (too short) task line: \" + line);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"friedrice231"},"content":"        String taskType \u003d line.substring(1, 2);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"friedrice231"},"content":"        boolean isDone \u003d (line.charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"friedrice231"},"content":"        String details \u003d line.substring(7).trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"friedrice231"},"content":"        // 1) Get Optional\u003cTask\u003e from helper","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"friedrice231"},"content":"        Optional\u003cTask\u003e maybeTask \u003d createTaskFromType(taskType, details);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"friedrice231"},"content":"        // 2) If empty, skip","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"friedrice231"},"content":"        if (maybeTask.isEmpty()) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"friedrice231"},"content":"            System.out.println(\"Skipping malformed (invalid format) task line: \" + line);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"friedrice231"},"content":"        // 3) Extract the Task and mark if done","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"friedrice231"},"content":"        Task task \u003d maybeTask.get();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"friedrice231"},"content":"        if (isDone) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"friedrice231"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"friedrice231"},"content":"        return Optional.of(task);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"friedrice231"},"content":"    private Optional\u003cTask\u003e createTaskFromType(String taskType, String details) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"friedrice231"},"content":"        switch (taskType) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"friedrice231"},"content":"        case \"T\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"friedrice231"},"content":"            return parseToDo(details);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"friedrice231"},"content":"        case \"D\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"friedrice231"},"content":"            return parseDeadline(details);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"friedrice231"},"content":"        case \"E\":","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"friedrice231"},"content":"            return parseEvent(details);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"friedrice231"},"content":"        default:","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"friedrice231"},"content":"    private Optional\u003cTask\u003e parseToDo(String details) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"friedrice231"},"content":"        // If you want to guard for empty details, do so here","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"friedrice231"},"content":"        return Optional.of(new ToDo(details));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"friedrice231"},"content":"    private Optional\u003cTask\u003e parseDeadline(String details) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"friedrice231"},"content":"        // e.g., \"Some desc (by: 12/12/2024 1800)\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"friedrice231"},"content":"        String[] parts \u003d details.split(\"\\\\(by: \", 2);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"friedrice231"},"content":"        if (parts.length \u003c 2) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"friedrice231"},"content":"        String desc \u003d parts[0].trim();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"friedrice231"},"content":"        String deadlineStr \u003d parts[1].replace(\")\", \"\").trim();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"friedrice231"},"content":"        return Optional.of(new Deadline(desc, deadlineStr));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"friedrice231"},"content":"    private Optional\u003cTask\u003e parseEvent(String details) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"friedrice231"},"content":"        // e.g. \"Meeting from: 12/12/2024 1800 to: 12/12/2024 2000\"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"friedrice231"},"content":"        String[] parts \u003d details.split(\"from: | to: \");","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"friedrice231"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"friedrice231"},"content":"            return Optional.empty();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"friedrice231"},"content":"        return Optional.of(new Event(parts[0].trim(), parts[1].trim(), parts[2].trim()));","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"friedrice231"},"content":"     * Retrieves a random motivational quote from a file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"friedrice231"},"content":"     * @param cheerFilePath The path to the cheer quotes file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"friedrice231"},"content":"     * @return A randomly selected quote from the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"friedrice231"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"friedrice231"},"content":"    public String getRandomQuote(String cheerFilePath) throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"friedrice231"},"content":"        File file \u003d new File(cheerFilePath);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"friedrice231"},"content":"        if (!file.exists()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"friedrice231"},"content":"            return \"File not found!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"friedrice231"},"content":"        List\u003cString\u003e quotes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"friedrice231"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"friedrice231"},"content":"            String line;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"friedrice231"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"friedrice231"},"content":"                if (!line.trim().isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"friedrice231"},"content":"                    quotes.add(line.trim());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"friedrice231"},"content":"                }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"friedrice231"},"content":"            }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"friedrice231"},"content":"        if (quotes.isEmpty()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"friedrice231"},"content":"            return \"No cheers found!\";","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"friedrice231"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"friedrice231"},"content":"        return quotes.get(random.nextInt(quotes.size()));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"friedrice231":188}},{"path":"src/main/java/pawpal/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.utils;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.io.IOException;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import java.util.Collections;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import java.util.Comparator;","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Deadline;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Event;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.ToDo;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":" * Manages the task list, including adding, removing, and updating tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"public class TaskList {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"    private final Storage storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new {@code TaskList} with an empty task list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"     * Initializes storage and loads tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"        loadTasksFromStorage();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"     * Loads tasks from storage when the application starts.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"    private void loadTasksFromStorage() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"        try {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"            tasks.addAll(storage.loadTasks());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"            throw new RuntimeException(\"Error loading tasks.\", e);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"     * Adds a new ToDo task to the list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"     * @param description The description of the ToDo task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"     * @return The response message after successfully adding the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"    public String addToDo(String description) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"        if (description \u003d\u003d null || description.trim().isEmpty()) {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"            throw new IllegalArgumentException(\"Task description cannot be empty!\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"        return Printer.getTaskAddedMessage(task.toString(), tasks.size());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"     * Adds a new Deadline task to the list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"     * @param deadline    The due date and time for the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"     * @return The response message after successfully adding the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"    public String addDeadline(String description, String deadline) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"        Task task \u003d new Deadline(description, deadline);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"        return Printer.getTaskAddedMessage(task.toString(), tasks.size());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"friedrice231"},"content":"     * Adds a new Event task to the list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"friedrice231"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"friedrice231"},"content":"     * @param from        The starting time of the event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"friedrice231"},"content":"     * @param to          The ending time of the event.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"friedrice231"},"content":"     * @return The response message after successfully adding the task.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"friedrice231"},"content":"    public String addEvent(String description, String from, String to) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"friedrice231"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"friedrice231"},"content":"        tasks.add(task);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"friedrice231"},"content":"        return Printer.getTaskAddedMessage(task.toString(), tasks.size());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"friedrice231"},"content":"     * Deletes a task from the list based on the task number.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"friedrice231"},"content":"     * @param taskNumber The 1-based index of the task to be deleted.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"friedrice231"},"content":"     * @return The response message indicating success or failure.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"friedrice231"},"content":"    public String deleteTask(int taskNumber) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"friedrice231"},"content":"        if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d tasks.size()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"friedrice231"},"content":"            Task task \u003d tasks.remove(taskNumber - 1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"friedrice231"},"content":"            return Printer.getTaskDeletedMessage(task, tasks.size());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"friedrice231"},"content":"        return Printer.getInvalidTaskNumberMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"friedrice231"},"content":"     * Marks a task as completed based on the task number.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"friedrice231"},"content":"     * @param taskNumber The 1-based index of the task to be marked as completed.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"friedrice231"},"content":"     * @return The response message indicating success or failure.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"friedrice231"},"content":"    public String markTask(int taskNumber) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"friedrice231"},"content":"        if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d tasks.size()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"friedrice231"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"friedrice231"},"content":"            task.markAsDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"friedrice231"},"content":"            return Printer.getTaskMarkedMessage(task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"friedrice231"},"content":"        return Printer.getInvalidTaskNumberMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"friedrice231"},"content":"     * Marks a task as not completed based on the task number.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"friedrice231"},"content":"     * @param taskNumber The 1-based index of the task to be marked as not completed.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"friedrice231"},"content":"     * @return The response message indicating success or failure.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"friedrice231"},"content":"    public String unmarkTask(int taskNumber) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"friedrice231"},"content":"        if (taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d tasks.size()) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"friedrice231"},"content":"            Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"friedrice231"},"content":"            task.markAsNotDone();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"friedrice231"},"content":"            return Printer.getTaskUnmarkedMessage(task);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"friedrice231"},"content":"        }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"friedrice231"},"content":"        return Printer.getInvalidTaskNumberMessage();","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"friedrice231"},"content":"     * Searches for tasks that contain the given keyword in their description.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"friedrice231"},"content":"     * @param keyword The keyword to search for in task descriptions.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"friedrice231"},"content":"     * @return The response message listing the matching tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"friedrice231"},"content":"    public String findTasks(String keyword) {","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"friedrice231"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"friedrice231"},"content":"                .filter(task -\u003e task.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"friedrice231"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"friedrice231"},"content":"        return Printer.getMatchingTasksMessage(matchingTasks);","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"friedrice231"},"content":"     * Retrieves a random motivational quote from a file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"friedrice231"},"content":"     * @return A randomly selected quote from the stored list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"friedrice231"},"content":"     * @throws IOException If an error occurs while reading the file.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"friedrice231"},"content":"    public String getRandomQuote() throws IOException {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"friedrice231"},"content":"        return storage.getRandomQuote(\"./data/cheer.txt\");","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"friedrice231"},"content":"     * Returns the current list of tasks.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"friedrice231"},"content":"     * @return The list of tasks.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"friedrice231"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"friedrice231"},"content":"        return tasks;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"friedrice231"},"content":"     * Sorts the tasks in the following order:","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"friedrice231"},"content":"     * 1. ToDo tasks first","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"friedrice231"},"content":"     * 2. Deadline tasks sorted by the nearest deadline","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"friedrice231"},"content":"     * 3. Event tasks sorted by the earliest start time","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"friedrice231"},"content":"    public void sortTasks() {","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"friedrice231"},"content":"        Collections.sort(tasks);","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-21","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"friedrice231":174}},{"path":"src/main/java/pawpal/utils/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.utils;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Task;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"/**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":" * Handles interactions with the user, including displaying messages and reading input.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":" * Delegates message generation to the Printer class.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":" */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"public class Ui {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"    private final Scanner scanner;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"     * Constructs a new {@code Ui} instance.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    public Ui() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"     * Displays a greeting message to the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"    public void showGreeting() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getGreetingMessage(\"PawPal\"));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"     * Displays a farewell message to the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"    public void showBye() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getByeMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"     * Displays an error message when loading tasks fails.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"    public void showLoadingError() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getLoadingErrorMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"     * Displays an error message when saving tasks fails.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"friedrice231"},"content":"    public void showSavingError() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getSavingErrorMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"friedrice231"},"content":"     * Displays the list of tasks to the user.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"friedrice231"},"content":"     * @param tasks The list of tasks to display.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"friedrice231"},"content":"    public void showTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getTaskListString(tasks));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"friedrice231"},"content":"     * Displays a message when a task is added to the list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"friedrice231"},"content":"     * @param task      The task that was added.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"     * @param taskCount The current number of tasks in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"friedrice231"},"content":"    public void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getTaskAddedMessage(task.toString(), taskCount));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"friedrice231"},"content":"     * Displays a message when a task is deleted from the list.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"friedrice231"},"content":"     * @param task      The task that was deleted.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"friedrice231"},"content":"     * @param taskCount The current number of tasks remaining in the list.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"friedrice231"},"content":"    public void showTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getTaskDeletedMessage(task, taskCount));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"friedrice231"},"content":"     * Displays a message when a task is marked as completed.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"friedrice231"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"friedrice231"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getTaskMarkedMessage(task));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"friedrice231"},"content":"     * Displays a message when a task is unmarked (set to incomplete).","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"friedrice231"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"friedrice231"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getTaskUnmarkedMessage(task));","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"friedrice231"},"content":"     * Displays an error message when the user enters an invalid task number.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"friedrice231"},"content":"    public void showInvalidTaskNumber() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getInvalidTaskNumberMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"friedrice231"},"content":"     * Displays an error message when the user enters an invalid command.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"friedrice231"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"friedrice231"},"content":"        System.out.println(Printer.getInvalidCommandMessage());","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"friedrice231"},"content":"    /**","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"friedrice231"},"content":"     * Reads the next line of input from the user.","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"friedrice231"},"content":"     *","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"friedrice231"},"content":"     * @return The user input as a trimmed string.","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"friedrice231"},"content":"     */","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"friedrice231"},"content":"    public String readCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"friedrice231"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"friedrice231":120}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"         maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"         maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"         prefWidth\u003d\"400.0\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"         type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"         xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Hello!\"/\u003e","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"friedrice231":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"            fx:controller\u003d\"pawpal.core.MainWindow\" stylesheets\u003d\"@style.css\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"            \u003c/content\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"    \u003c/children\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2025-02-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-13","isFullCredit":false}],"authorContributionMap":{"friedrice231":22}},{"path":"src/test/java/pawpal/core/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.Command;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"class ParserTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"    private final Parser parser \u003d new Parser(null); // Pass null for TaskList since we\u0027re testing parsing only","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"    void parseCommand_validCommand_returnsCorrectEnum() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"        // Positive test case: Recognizing a valid command","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"        assertEquals(Command.TODO, parser.parseCommand(\"todo read book\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"        assertEquals(Command.DEADLINE, parser.parseCommand(\"deadline submit report /by tomorrow\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"    void parseCommand_invalidCommand_returnsInvalid() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"        // Negative test case: Handling an invalid command","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"        assertEquals(Command.INVALID, parser.parseCommand(\"dance tango\"));","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"friedrice231":24}},{"path":"src/test/java/pawpal/core/PawPalTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import java.util.List;","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.*;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.*;","lastModifiedDate":"2025-02-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"class PawPalTest {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"    void testAddEvent() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"        // Arrange","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"        Storage mockStorage \u003d new Storage(\"test_tasks.txt\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"        TaskList taskList \u003d new TaskList(mockStorage);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"        Printer mockPrinter \u003d new Printer();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"        // Act","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"        taskList.addEvent(\"Team Meeting\", \"10/02/2025 1400\", \"10/02/2025 1600\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"        // Assert","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"        assertEquals(1, tasks.size(), \"Task list should contain one task\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"        assertInstanceOf(Event.class, tasks.getFirst(), \"The task should be an instance of Event\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"        assertEquals(\"[E][ ] Team Meeting from: Feb 10 2025, 2:00 PM to: Feb 10 2025, 4:00 PM\", tasks.getFirst().toString());","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    @Test","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"    void testParseCommand() {","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"        // Arrange","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"        TaskList mockTaskList \u003d new TaskList(new Storage(\"test_tasks.txt\"));","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"        Parser parser \u003d new Parser(mockTaskList);","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"        // Act \u0026 Assert","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"        assertEquals(Command.LIST, parser.parseCommand(\"list\"), \"Command should be parsed as LIST\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"        assertEquals(Command.MARK, parser.parseCommand(\"mark\"), \"Command should be parsed as MARK\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"        assertEquals(Command.INVALID, parser.parseCommand(\"unknownCommand\"), \"Invalid command should return INVALID\");","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-07","isFullCredit":false}],"authorContributionMap":{"friedrice231":39}},{"path":"src/test/java/pawpal/core/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"package pawpal.core;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"import java.util.List;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"import pawpal.tasks.Task;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.Storage;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"import pawpal.utils.TaskList;","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"class TaskListTest {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"friedrice231"},"content":"    private final Storage storage \u003d new Storage(\"./test_tasks.txt\"); // Test storage file","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"    private final TaskList taskList \u003d new TaskList(storage);","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"friedrice231"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"    void addToDo_validDescription_taskAdded() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"        // Positive test case: Adding a ToDo task","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"        taskList.addToDo(\"Buy groceries\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"friedrice231"},"content":"        assertFalse(tasks.isEmpty());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"        assertEquals(\"[T][ ] Buy groceries\", tasks.getFirst().toString());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"friedrice231"},"content":"    @Test","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"    void addToDo_emptyDescription_throwsException() {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"        // Negative test case: Adding an empty ToDo task should not be allowed","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"        Exception exception \u003d assertThrows(IllegalArgumentException.class, () -\u003e {","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"            taskList.addToDo(\"\");","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"        });","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"        assertEquals(\"Task description cannot be empty!\", exception.getMessage());","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"    }","lastModifiedDate":"2025-02-14","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"}","lastModifiedDate":"2025-02-14","isFullCredit":false}],"authorContributionMap":{"friedrice231":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"friedrice231"},"content":"todo buy groceries","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"friedrice231"},"content":"todo","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"friedrice231"},"content":"todo","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"friedrice231"},"content":"deadline submit assignment","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"friedrice231"},"content":"deadline complete report /by","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"friedrice231"},"content":"deadline prepare report /by Tuesday","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"friedrice231"},"content":"event team meeting","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"friedrice231"},"content":"event conference /from 9am","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"friedrice231"},"content":"event product launch /from 10am /to","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"friedrice231"},"content":"event company retreat /from Fri 9am /to Sun 5pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"friedrice231"},"content":"mark","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"friedrice231"},"content":"mark -1","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"friedrice231"},"content":"mark 100","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"mark 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"friedrice231"},"content":"unmark","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"friedrice231"},"content":"unmark 100","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"unmark 1","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"friedrice231"},"content":"todo clean the house","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"friedrice231"},"content":"todo    write journal","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"friedrice231"},"content":"todo organize workspace","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"friedrice231"},"content":"deadline plan vacation /by next month","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"friedrice231"},"content":"event family dinner /from Sat 7pm /to 10pm","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"friedrice231"},"content":"mark 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"friedrice231"},"content":"unmark 2","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"friedrice231"},"content":"mark 999","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"friedrice231"},"content":"todo go for a walk","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"list","lastModifiedDate":"2025-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"friedrice231"},"content":"todo read book","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"friedrice231"},"content":"mark 6","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"friedrice231"},"content":"unmark 7","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"friedrice231"},"content":"unmark 6","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"friedrice231"},"content":"todo","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"friedrice231"},"content":"mark abc","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"friedrice231"},"content":"deadline holiday plans /by 2023-12-25","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"friedrice231"},"content":"event tech conference /from 2023-08-10 /to 2023-08-12","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"friedrice231"},"content":"todo learn Java","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"friedrice231"},"content":"todo","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"friedrice231"},"content":"deadline","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"friedrice231"},"content":"event","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"friedrice231"},"content":"delete","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"friedrice231"},"content":"delete 3","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"friedrice231"},"content":"list","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"friedrice231"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"bye","lastModifiedDate":"2025-01-31","isFullCredit":false}],"authorContributionMap":{"friedrice231":40,"-":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"# Colors and formatting","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"RED\u003d\u0027\\033[0;31m\u0027","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"GREEN\u003d\u0027\\033[0;32m\u0027","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"BLUE\u003d\u0027\\033[0;34m\u0027","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"YELLOW\u003d\u0027\\033[1;33m\u0027","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"NC\u003d\u0027\\033[0m\u0027 # No Color","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"BOLD\u003d\u0027\\033[1m\u0027","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"# Print header","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"echo -e \"${BOLD}\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"echo -e \"${BLUE}               Duke Test Runner               ${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"echo -e \"${BOLD}\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d${NC}\\n\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"# Print Java version for debugging","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"echo -e \"${BOLD}[1/4] Checking Java version...${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -version","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"# check if using Java 21","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"java_ver\u003d$(java -version 2\u003e\u00261 | grep -i version | head -n 1)","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"echo -e \"${BLUE}Detected Java version: ${NC}$java_ver\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"version\u003d$(echo $java_ver | sed -n \u0027s/.*version \"\\([0-9]*\\).*/\\1/p\u0027)","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"echo -e \"${BLUE}Parsed major version: ${NC}$version\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ \"$version\" !\u003d \"21\" ]; then","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo -e \"\\n${RED}╔════ ERROR ══════════════════════════════════╗${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo -e \"${RED}║ Please use Java 21 (current version: $version)${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    echo -e \"${RED}╚═════════════════════════════════════════════╝${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"echo -e \"${GREEN}✓ Java version check passed${NC}\\n\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"echo -e \"${BOLD}[2/4] Setting up test environment...${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo -e \"${BLUE}Created bin directory${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    echo -e \"${BLUE}Cleaned up previous test outputs${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"echo -e \"\\n${BOLD}[3/4] Compiling source files...${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"friedrice231"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin $(find ./src/main/java -name \"*.java\")","lastModifiedDate":"2025-02-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    echo -e \"\\n${RED}╔════ ERROR ══════════════════════════════════╗${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    echo -e \"${RED}║            BUILD FAILURE                     ║${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    echo -e \"${RED}╚═════════════════════════════════════════════╝${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo -e \"${GREEN}✓ Compilation successful${NC}\\n\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo -e \"${BOLD}[4/4] Running tests...${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"friedrice231"},"content":"java -classpath ../bin PawPal \u003c ./text-ui-test/input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"friedrice231"},"content":"cp ./text-ui-test/EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT 2\u003e/dev/null","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    echo -e \"\\n${GREEN}╔════ SUCCESS ════════════════════════════════╗${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    echo -e \"${GREEN}║              All tests passed                ║${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    echo -e \"${GREEN}╚═════════════════════════════════════════════╝${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    echo -e \"\\n${RED}╔════ ERROR ══════════════════════════════════╗${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    echo -e \"${RED}║              Tests FAILED                     ║${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    echo -e \"${RED}╚═════════════════════════════════════════════╝${NC}\"","lastModifiedDate":"2025-01-09","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"friedrice231":3,"-":80}}]
